#BlueJ class context
comment0.params=numRows\ numCols
comment0.target=Grid(int,\ int)
comment0.text=\r\n\ Constructor\ for\ grid\ of\ game-cells.\r\n\r\n\ @param\ numRows\ Number\ of\ rows\ in\ grid.\r\n\ @param\ numCols\ Number\ of\ columns\ in\ grid.\r\n
comment1.params=imageFileName
comment1.target=Grid(java.lang.String)
comment1.text=\r\n\ Alternative\ constructor\:\ given\ an\ image,\ will\ use\ it\ as\ background\ for\r\n\ the\ grid\ (pixelation\ will\ depend\ upon\ size\ of\ image\ and\ size\ of\ grid).\r\n\r\n\ @param\ imageFileName\ Name\ of\ accessible\ image-file\ for\ background.\r\n
comment10.params=row\ col\ imageFileName
comment10.target=void\ setImage(int,\ int,\ java.lang.String)
comment10.text=\r\n\ Sets\ foreground\ image\ of\ Cell\ at\ given\ location.\r\n\r\n\ @param\ row\ Row\ of\ grid-Cell\ location.\r\n\ @param\ col\ Column\ of\ grid-Cell\ location.\r\n\ @param\ imageFileName\ Name\ of\ accessible\ image-file\ to\ place\ in\ Cell\ at\r\n\ \ \ \ \ \ \ \ \ \ \ \ position\ (row,\ col).\ Cell\ will\ be\ empty\ if\ name\ \=\=\ null.\r\n
comment11.params=row\ col
comment11.target=java.lang.String\ getImage(int,\ int)
comment11.text=\r\n\ Returns\ name\ of\ image-file\ displayed\ at\ given\ location.\r\n\r\n\ @param\ row\ Row\ of\ grid-Cell\ location.\r\n\ @param\ col\ Column\ of\ grid-Cell\ location.\r\n\r\n\ @return\ Name\ of\ image-file\ for\ image\ displayed\ at\ location\ (row,\ col).\r\n\ \ \ \ \ \ \ \ \ Will\ be\ null\ if\ Cell\ appears\ empty.\r\n
comment12.params=milliseconds
comment12.target=void\ pause(int)
comment12.text=\r\n\ Pauses\ game\ for\ a\ period.\r\n\r\n\ @param\ milliseconds\ Number\ of\ milliseconds\ for\ pause\r\n\ \ \ \ \ \ \ \ \ \ \ \ (so\ 1000\ \=\=\ approx.\ 1\ second).\r\n
comment13.params=imageFileName
comment13.target=void\ load(java.lang.String)
comment13.text=\r\n\ Loads\ a\ file\ as\ background\ to\ the\ screen\ (pixelation\ will\ depend\ upon\r\n\ size\ of\ image\ and\ size\ of\ grid).\r\n\ @param\ imageFileName\r\n
comment14.params=imageFileName
comment14.target=void\ save(java.lang.String)
comment14.text=\r\n\ Saves\ an\ image\ of\ the\ game-screen.\r\n\r\n\ @param\ imageFileName\ Name\ of\ the\ file\ to\ save.\r\n
comment15.params=listener
comment15.target=void\ addKeyListener(java.awt.event.KeyListener)
comment15.text=\r\n\ Passes\ input\ listener\ object\ on\ to\ the\ enclosed\ GUI\ frame,\ to\ direct\r\n\ KeyEvents\ from\ the\ user\ back\ to\ that\ listener\ (this\ will\ be\ the\ Game).\r\n
comment16.params=g
comment16.target=void\ paintComponent(java.awt.Graphics)
comment16.text=\r\n\ Display\ graphical\ elements\ of\ game.\ Called\ by\ GUI\ system.\r\n
comment17.params=
comment17.target=int\ getCellSize()
comment17.text=Utility\ method\ to\ return\ size\ of\ cells\ in\ grid.
comment18.params=imageFileName
comment18.target=java.awt.image.BufferedImage\ loadImage(java.lang.String)
comment18.text=Utility\ method\:\ returns\ BufferedImage\ with\ given\ file-name\ (if\ found).
comment19.params=image
comment19.target=void\ showImage(java.awt.image.BufferedImage)
comment19.text=Utility\ method\ to\ display\ an\ image\ (pixelated)\ in\ grid
comment2.params=numRows\ numCols
comment2.target=void\ init(int,\ int)
comment2.text=\r\n\ Helper\ method\ to\ set\ up\ Grid;\ used\ by\ both\ constructors.\r\n\r\n\ @param\ numRows\ Number\ of\ rows\ in\ grid.\r\n\r\n\ @param\ numCols\ Number\ of\ columns\ in\ grid.\r\n
comment3.params=
comment3.target=int\ getNumRows()
comment3.text=\r\n\ @return\ Number\ of\ rows\ in\ grid.\r\n
comment4.params=
comment4.target=int\ getNumCols()
comment4.text=\r\n\ @return\ Number\ of\ columns\ in\ grid.\r\n
comment5.params=title
comment5.target=void\ setTitle(java.lang.String)
comment5.text=\r\n\ Sets\ window\ title.\r\n\r\n\ @param\ title\ Title\ for\ window.\r\n
comment6.params=row\ col\ color
comment6.target=void\ setColor(int,\ int,\ java.awt.Color)
comment6.text=\r\n\ Sets\ background\ of\ Cell\ at\ a\ given\ location.\r\n\r\n\ @param\ row\ Row\ of\ grid-Cell\ location.\r\n\ @param\ col\ Column\ of\ grid-Cell\ location.\r\n\ @param\ color\ Color\ to\ set\ Cell\ at\ position\ (row,col).\r\n
comment7.params=row\ col
comment7.target=boolean\ isValid(int,\ int)
comment7.text=\r\n\ Utility\ used\ to\ check\ whether\ or\ not\ locations\ are\ in\ the\ grid\ properly.\r\n
comment8.params=row\ col
comment8.target=java.awt.Color\ getColor(int,\ int)
comment8.text=\r\n\ Gets\ background\ of\ Cell\ at\ a\ given\ location.\r\n\r\n\ @param\ row\ Row\ of\ grid-Cell\ location.\r\n\ @param\ col\ Column\ of\ grid-Cell\ location.\r\n\r\n\ @return\ Color\ of\ Cell\ at\ position\ (row,col).\r\n
comment9.params=color
comment9.target=void\ setBackground(java.awt.Color)
comment9.text=\r\n\ Sets\ background\ of\ all\ Cells\ at\ once.\r\n\r\n\ @param\ color\ Background\ color\ for\ all\ Cells\ on-screen.\r\n
numComments=20
